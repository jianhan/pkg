// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/mysql.proto

/*
Package mysql is a generated protocol buffer package.

It is generated from these files:
	proto/mysql.proto

It has these top-level messages:
	Pagination
	Sort
	UpsertResults
	DeleteResults
	IDs
	BoolField
*/
package mysql

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// SortDirection will be used for transform incomming request into mysql sort statement.
type SortDirection int32

const (
	SortDirection_ASC  SortDirection = 0
	SortDirection_DESC SortDirection = 1
)

var SortDirection_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}
var SortDirection_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x SortDirection) String() string {
	return proto.EnumName(SortDirection_name, int32(x))
}
func (SortDirection) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Pagination contains all pagination variables.
type Pagination struct {
	Page    uint64 `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	PerPage uint64 `protobuf:"varint,2,opt,name=per_page,json=perPage" json:"per_page,omitempty"`
}

func (m *Pagination) Reset()                    { *m = Pagination{} }
func (m *Pagination) String() string            { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()               {}
func (*Pagination) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Pagination) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Pagination) GetPerPage() uint64 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

// Sort contains fields for SQL order statement.
type Sort struct {
	Field     string        `protobuf:"bytes,1,opt,name=field" json:"field,omitempty"`
	Direction SortDirection `protobuf:"varint,2,opt,name=direction,enum=go_micro_pkg_mysql.SortDirection" json:"direction,omitempty"`
}

func (m *Sort) Reset()                    { *m = Sort{} }
func (m *Sort) String() string            { return proto.CompactTextString(m) }
func (*Sort) ProtoMessage()               {}
func (*Sort) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Sort) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Sort) GetDirection() SortDirection {
	if m != nil {
		return m.Direction
	}
	return SortDirection_ASC
}

// UpsertResult contains response for mysql upserts.
type UpsertResults struct {
	RowsAffected int64 `protobuf:"varint,1,opt,name=rows_affected,json=rowsAffected" json:"rows_affected,omitempty"`
	Updated      int64 `protobuf:"varint,2,opt,name=updated" json:"updated,omitempty"`
	Inserted     int64 `protobuf:"varint,3,opt,name=inserted" json:"inserted,omitempty"`
}

func (m *UpsertResults) Reset()                    { *m = UpsertResults{} }
func (m *UpsertResults) String() string            { return proto.CompactTextString(m) }
func (*UpsertResults) ProtoMessage()               {}
func (*UpsertResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpsertResults) GetRowsAffected() int64 {
	if m != nil {
		return m.RowsAffected
	}
	return 0
}

func (m *UpsertResults) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *UpsertResults) GetInserted() int64 {
	if m != nil {
		return m.Inserted
	}
	return 0
}

// DeleteResults contains results when rows are deleted.
type DeleteResults struct {
	Deleted int64 `protobuf:"varint,1,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *DeleteResults) Reset()                    { *m = DeleteResults{} }
func (m *DeleteResults) String() string            { return proto.CompactTextString(m) }
func (*DeleteResults) ProtoMessage()               {}
func (*DeleteResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteResults) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

// IDs is a commonly used data.
type IDs struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *IDs) Reset()                    { *m = IDs{} }
func (m *IDs) String() string            { return proto.CompactTextString(m) }
func (*IDs) ProtoMessage()               {}
func (*IDs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *IDs) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// BoolField contains data for boolean field.
type BoolField struct {
	Value  bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Ignore bool `protobuf:"varint,2,opt,name=ignore" json:"ignore,omitempty"`
}

func (m *BoolField) Reset()                    { *m = BoolField{} }
func (m *BoolField) String() string            { return proto.CompactTextString(m) }
func (*BoolField) ProtoMessage()               {}
func (*BoolField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *BoolField) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func (m *BoolField) GetIgnore() bool {
	if m != nil {
		return m.Ignore
	}
	return false
}

func init() {
	proto.RegisterType((*Pagination)(nil), "go_micro_pkg_mysql.Pagination")
	proto.RegisterType((*Sort)(nil), "go_micro_pkg_mysql.Sort")
	proto.RegisterType((*UpsertResults)(nil), "go_micro_pkg_mysql.UpsertResults")
	proto.RegisterType((*DeleteResults)(nil), "go_micro_pkg_mysql.DeleteResults")
	proto.RegisterType((*IDs)(nil), "go_micro_pkg_mysql.IDs")
	proto.RegisterType((*BoolField)(nil), "go_micro_pkg_mysql.BoolField")
	proto.RegisterEnum("go_micro_pkg_mysql.SortDirection", SortDirection_name, SortDirection_value)
}

func init() { proto.RegisterFile("proto/mysql.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0x93, 0x36, 0xc9, 0x60, 0xa4, 0x0e, 0x45, 0xa3, 0xa7, 0x1a, 0x2f, 0xd5, 0x43,
	0x05, 0x3d, 0x89, 0x07, 0x69, 0x1b, 0x05, 0x6f, 0x65, 0x8b, 0x17, 0x41, 0x42, 0x6c, 0xa6, 0x61,
	0x35, 0xcd, 0xc6, 0xdd, 0xad, 0xe2, 0xbf, 0x97, 0x6c, 0x1a, 0x45, 0xbc, 0xcd, 0xf7, 0xde, 0xce,
	0xcc, 0xee, 0x5b, 0xd8, 0xaf, 0xa4, 0xd0, 0xe2, 0x62, 0xfd, 0xa5, 0xde, 0x8b, 0xb1, 0xa9, 0x11,
	0x73, 0x91, 0xac, 0xf9, 0x52, 0x8a, 0xa4, 0x7a, 0xcb, 0x13, 0xe3, 0x44, 0x37, 0x00, 0xf3, 0x34,
	0xe7, 0x65, 0xaa, 0xb9, 0x28, 0x11, 0xc1, 0xa9, 0xd2, 0x9c, 0x42, 0x6b, 0x68, 0x8d, 0x1c, 0x66,
	0x6a, 0x3c, 0x02, 0xaf, 0x22, 0x99, 0x18, 0xbd, 0x63, 0x74, 0xb7, 0x22, 0x39, 0x4f, 0x73, 0x8a,
	0x9e, 0xc1, 0x59, 0x08, 0xa9, 0x71, 0x00, 0xdd, 0x15, 0xa7, 0x22, 0x33, 0x7d, 0x3e, 0x6b, 0x00,
	0x6f, 0xc1, 0xcf, 0xb8, 0xa4, 0x65, 0x3d, 0xd9, 0x74, 0xee, 0x5d, 0x9e, 0x8c, 0xff, 0x5f, 0x61,
	0x5c, 0x8f, 0x88, 0xdb, 0x83, 0xec, 0xb7, 0x27, 0x7a, 0x85, 0xe0, 0xb1, 0x52, 0x24, 0x35, 0x23,
	0xb5, 0x29, 0xb4, 0xc2, 0x53, 0x08, 0xa4, 0xf8, 0x54, 0x49, 0xba, 0x5a, 0xd1, 0x52, 0x53, 0xb3,
	0xcf, 0x66, 0xbb, 0xb5, 0x38, 0xd9, 0x6a, 0x18, 0x82, 0xbb, 0xa9, 0xb2, 0xb4, 0xb6, 0x3b, 0xc6,
	0x6e, 0x11, 0x8f, 0xc1, 0xe3, 0x65, 0x3d, 0x8f, 0xb2, 0xd0, 0x36, 0xd6, 0x0f, 0x47, 0x67, 0x10,
	0xc4, 0x54, 0x90, 0xa6, 0x76, 0x57, 0x08, 0x6e, 0x66, 0x84, 0x76, 0x4b, 0x8b, 0xd1, 0x21, 0xd8,
	0x0f, 0xb1, 0xc2, 0x3e, 0xd8, 0x3c, 0x53, 0xa1, 0x35, 0xb4, 0x47, 0x3e, 0xab, 0xcb, 0xe8, 0x1a,
	0xfc, 0xa9, 0x10, 0xc5, 0xbd, 0x79, 0xfd, 0x00, 0xba, 0x1f, 0x69, 0xb1, 0x69, 0xb2, 0xf4, 0x58,
	0x03, 0x78, 0x00, 0x3d, 0x9e, 0x97, 0x42, 0x36, 0x51, 0x7a, 0x6c, 0x4b, 0xe7, 0x11, 0x04, 0x7f,
	0x62, 0x40, 0x17, 0xec, 0xc9, 0x62, 0xd6, 0xdf, 0x41, 0x0f, 0x9c, 0xf8, 0x6e, 0x31, 0xeb, 0x5b,
	0x53, 0xf7, 0xa9, 0x6b, 0x02, 0x7b, 0xe9, 0x99, 0xef, 0xbc, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff,
	0xcc, 0xfb, 0xff, 0x83, 0xe3, 0x01, 0x00, 0x00,
}
